<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>body_forward_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>enemy_parent</parentName>
  <maskName>centipede_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Head is true if the first one spawned
if (instance_number(centipede_obj) == 1) {
     head = true;
} else {
     head = false;
}

image_speed = 0;

dont_check_head = true;

//Variables used for Avoiding Collisions with other Centipede
can_move = true; //trigger used for collisions with other centipede
age = 0; //age of centipede
go_down = false;
collision_time = 0;

//Grasshopper Game Var
counter = 0;
injure = 0;

//Offset Animation
if (global_game_obj.cent_spawn_created &gt; 8) {
     anim = global_game_obj.cent_spawn_created - 8;
} else {
     anim = global_game_obj.cent_spawn_created;
}

//Set animation variables
sprite_old = sprite_index; image_speed = 0; cent_anim = 0; cent_anim2 = 0;
//Set Image Index
image_index = cent_anim + ((global.level-1)*8);
//Location where explosion should happen
explodex = -2; explodey = 0;

//Direction and Motion Orientation Initiation
//When Spawned from RIGHT during Regeneration
if (y = 192) &amp;&amp; (x &gt;= room_width) {
     hdir = 1; image_xscale = 1; move_mode = 1; vdir = 1;
     if (global_game_obj.even_or_odd_level == 1) then {spd = 4};
     if (global_game_obj.even_or_odd_level == 2) then {spd = 2};
} else { //When Spawned from LEFT during Regeneration
     if (y = 192) &amp;&amp; (x &lt; 0) {
          hdir = 2; image_xscale = -1; move_mode = 1; vdir = 1;
          if (global_game_obj.even_or_odd_level == 1) then {spd = 4};
          if (global_game_obj.even_or_odd_level == 2) then {spd = 2};
     } else { //When Spawned from ceiling on middle or left
          if (x &lt; 120 &amp;&amp; y &lt; 16) or (x &gt; 120 &amp;&amp; y &lt; 16) {
               c = round(ceil(random(2)));
               if (c == 1) {
                    hdir = 2; vdir = 1; move_mode = 2; image_xscale = -1;
                    switch_type = 3; path_set = 1; spd = 4;
               }
               if (c == 2) {
                    hdir = 1; vdir = 1; move_mode = 2; image_xscale = 1;
                    switch_type = 4; path_set = 1; spd = 4;
               }
          } else {
               if (x == 120) &amp;&amp; (y &lt; 16) {
                    hdir = 2; vdir = 1; move_mode = 2; image_xscale = -1;
                    switch_type = 3; path_set = 1;
                    if (global_game_obj.even_or_odd_level == 1) then {spd = 4};
                    if (global_game_obj.even_or_odd_level == 2) then {spd = 2};
               } else {
                    move_mode = 1; hdir = 1; vdir = 1; image_xscale = -1;
                    if (global_game_obj.even_or_odd_level == 1) then {spd = 4};
                    if (global_game_obj.even_or_odd_level == 2) then {spd = 2};
               }
          }
     }
}

move_snap(8,8);
super_mushroom = false;
switch_step = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_move = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(cent_step_all_stop_script);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(cent_step_all_stop_script);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(cent_step_counters_script);
script_execute(cent_step_move_script);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="temp_mushroom_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//imitating behavior of Centipede original demo mode
super_mushroom = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="centipede_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This code will fix the aesthetically weird instance where two
//broken centipedes combine. This will keep them from combining
//by keeping intruding centipedes moving
 if (other.age &gt; age + (8/spd + 2)) or (other.age &lt; age - (8/spd + 2)) {

     if (move_mode == 1) &amp;&amp; (hdir == other.hdir) &amp;&amp; (other.age &gt; age){
         go_down = true;
     }
     
     if (hdir == other.hdir) then exit;
     if (can_move == false) then exit; //can_move prevents infinite cycling V/^;
     collision_time += 1;
     can_move = false; //trigger off
     alarm[0] = 10; //alarm turns can_move to true



     //MOVE MODE = 2///////////////////
     if (move_mode == 2) {

          if (switch_type == 1) {
               if (switch_step &gt;= 13) {
                    path_set = 1;
                    switch_type = 4;
               }
          }

          if (switch_type == 2) {
               if (switch_step &gt;= 13) {
                    path_set = 1;
                    switch_type = 3;
               }
          }

          if (switch_type == 3) {
               if (switch_step &gt;= 9) {
                    path_set = 1;
                    switch_type = 4;
               }
          }

          if (switch_type == 4) {
               if (switch_step &gt;= 9) {
                    path_set = 1;
                    switch_type = 3;
               }
          }
     }
     //MOVE MODE = 3//////////////////
     if (move_mode == 3) {

          if (switch_type == 1) {
               if (switch_step &lt;= 1) {
                    path_set = 1;
                    switch_type = 4;
               }
          }

          if (switch_type == 2) {
               if (switch_step &lt;= 1) {
                    path_set = 1;
                    switch_type = 3;
               }
          }

          if (switch_type == 3) {
               if (switch_step &gt;= 1) {
                    path_set = 1;
                    switch_type = 4;
               }
          }

          if (switch_type == 4) {
               if (switch_step &gt;= 1) {
                    path_set = 1;
                    switch_type = 3;
               }
          }
     }

 }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="super_mushroom_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>super_mushroom = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="laser_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//If a Head set the score + 100
//If a regular body part + 10
if (!global.demo) {
     if (head) or (global.cent_justdied == 1) {
          score += 100; global.cent_justdied = 1; global_game_obj.die_counter = 0;
     } else {
           score += 10; global.cent_justdied = 1; global_game_obj.die_counter = 0;
     }
}

//When the centipede dies it will drop a mushroom one column left if going left
//and one column right if going right
if (hdir == 1) then instance_create(abs(x div 8-1)*8,y,mushroom_obj);
if (hdir == 2) then instance_create((x div 8+1)*8,y,mushroom_obj);

//When a super mushroom centipede is destroyed, it leaves behind a temp_mushroom
//object which sobers the centipede as well as the rest of the ones behind.
if (super_mushroom) then instance_create(x,y,temp_mushroom_obj);

global_game_obj.bug_drop -= 1;

with (other) {instance_destroy();}
instance_create(x,y,explode_obj);
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ship_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This code for colliding with player when the player is invincible
if (!object_exists(ship_obj)) {
    exit;
}

if (other.invincible == true) {
            //create self explosion obj (animation)
    instance_create(x,y,explode_obj);
    
    //Set the Score to 100 if a Head
    //and 10 if a regular body part
    if (global.demo = false) {
         if (head = true) {
              score += 100
         } else {
              if (head = false) {
                   score += 10
              }
         }
    }
    
    //When Dead, Create a Mushroom to the left if going left or to the right
    //if going right
    if (hdir = 1) then {instance_create(abs(x div 8*8 - 1), y div 8*8,mushroom_obj)}
    if (hdir = 2) then {instance_create(x div 8*8 + 1,y div 8*8,mushroom_obj)}
    
    //Create Many Explosions in random nearby locations
    instance_create(x-4,y,explode_obj);
    for (var i; i &lt;= 6; i++) {
        instance_create(x-12 + random(16),y-8+random(16),explode_obj);
    }
    
        //Destroy Self
    instance_destroy();
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
