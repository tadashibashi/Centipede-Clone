<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>mushroom_spr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>block_obj</parentName>
  <maskName>square_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Start UP Variables/////////////////////////////////////////////////
super_mushroom = false; //starts out as a regular mushroom not super.
super_mushroom_create = 0; //set image
image_speed = 0; //keep image still
depth = -y;
life = 4; //mushroom hit-points set at 4
s = 0;
exist_counter = 0; //keeps mushrooms from overlapping by age detection
q = 0; //power up chance
//Snap to Grid///////////////////////////////////////////////// ///
move_snap(8,8);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//MAP PLACEMENT AND IMAGE PARAMETERS///////////////////////////
move_snap(8,8); //snaps the mushroom to the grid at all times
if (y &gt;= 240) then {instance_destroy();} //destroys any mushroom in bottom row
image_index = (global.level-1)*4 + (4 - life); //formula corrects to the right image


//EXISTENCE VARIABLE//////////////////////////////////////////
//This variable prevents mushrooms from stacking on top of each other
//New mushrooms start off with an exist_counter of 0
//If they overlap with mushrooms that already exist
//(exists counter would be 2 by then) then the new one gets destroyed
//Check the Collision with mushroom_obj event for the code.
if (exist_counter &lt; 2) {
    exist_counter += 1;
}


///////////SUPER MUSHROOM STATUS//////////////////////////////////////
//Become a Super Mushroom upon collision with a Gecko
//this must happen only during controllable gameplay to avoid
//player gaining infinite points during mushroom regeneration after the player dies
if (collision_rectangle(x+2,y+2,x+6,y+6,gecko_obj,true,false)) {
if (super_mushroom = false) &amp;&amp; (global.game_mode != 3) {
   super_mushroom = true;
}
}


//There is another object attached to the mushroom to allow for the centipede
//to detect it. The variable super_mushroom_create detects if the player should
//create a super_mushroom_obj on top of it. 0 means can create; 1 means cannot;
if (super_mushroom) &amp;&amp; (super_mushroom_create == 0) {
     super_mushroom_create = 1;
     instance_create(x,y,super_mushroom_obj);
}

if (super_mushroom_create == 1) &amp;&amp;
(!collision_point(x,y,super_mushroom_obj,true,false)) {
   super_mushroom_create = 0;
}


///////////////////////////////////////////////////////////////////////
//MUSHROOM DEATH///////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////
if (life &lt; 1) { //if hit-points become depleted

  if (!instance_exists(bug_obj)) { //increase chances a flea will fall down
    global_game_obj.bug_drop += 1; //variable increases chances the higher it is
    global_game_obj.bug_chance = true; //gives the fglobal_game_obj a chance to create flea
  }
  if (super_mushroom) &amp;&amp; (!global.mushroom_hunter)
  &amp;&amp; (!ship_obj.invincible) &amp;&amp; (!instance_exists(power_up_obj)) {
       q = round(ceil(random(6)));
       if (q == 1) {
            instance_create(x,y,power_up_obj);
       }
  }

  //This special grasshopper game may or may not be added
  if (global.ghgame == 5) { //if grasshopper game is happening
    if (super_mushroom == false) then {grasshopper_obj.get_mushroom += 1;} //destroy
    if (super_mushroom == true) then {grasshopper_obj.get_mushroom += 10;} //add points
  }

  if (!global.demo) then {score += 1;} //increase score by 1 during game play
  instance_destroy(); //destroy self

}

/////////////////////////////////////////////////////////////////////////////
///MUSHROOM HEALING during global.game_mode = 3//////////////////////////////
/////////////////////////////////////////////////////////////////////////////
if (global.game_mode = gameMode.mush) { //when mushrooms are being healed, create an object to                       //indicate the need to be healed
  if (life &lt; 4) or (super_mushroom) {
    instance_create(x,y,need_heal_obj);
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="invis_mushroom_obj">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="mushroom_repair_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (life &lt; 4) or (super_mushroom = true) {
  if global.game_mode = 3 {
    life = 4 //life is restored to maximum
    if global.demo = false then score += 5; //sets score + 5 if in game mode
    super_mushroom = false //take away super mushroom status
    sprite_index = mushroom_spr //change the sprite back to regular mushroom
    s = 0 //s triggers when the mushroom_healer_obj comes so it hits only once
  }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="mushroom_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The exist_counter is increased to two by step after creation
//This prevents younger newly created mushrooms from overlapping, in which case they
//are destroyed. These cases includes centipedes spawning mushrooms upon their
//deaths, and fleas from dropping overlapping mushrooms
if (other.exist_counter &lt; 2) {
   with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="laser_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_line(x+4,y+10,x+4,y+4,mushroom_obj,true,true)) then {other.y=other.y+8;exit;}
//If Ship does not exist, exit event
if (!instance_exists(ship_obj)) {
   exit;
 }

//When Ship is above mushroom, exit event
//In other words no mysterious destruction of mushrooms from behind
if (ship_obj.y &lt; y) {
   exit;
 }

//Decrease mushroom life by one, destroy laser
if global.mushroom_hunter = true {
     life -= 4; instance_create(x,y,explode_obj)
instance_create(x-12 + random(16),y-8+random(16),explode_obj)
instance_create(x-12 + random(16),y-8+random(16),explode_obj)
instance_create(x-12 + random(16),y-8+random(16),explode_obj)
} else { life -= 1;}
with (other) instance_destroy(); //destroy the laser_obj

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the super mushroom sprite if super mushroom
//Otherwise draw the regular mushroom sprite if regular
//The forumula for subimage takes the correlating damage and level color in account
if (life &gt;= 1) {
  if super_mushroom = true {
    draw_sprite(super_mushroom_spr,(global.level-1)*4 + (4 - life),x,y)
  } else {
    draw_sprite(mushroom_spr,(global.level-1)*4 + (4 - life),x,y)
  }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
